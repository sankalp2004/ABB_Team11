# FILE: pythonProject1/docker-compose.yml
# This is the correct version for your project structure.

version: '3.8'

services:
  # Angular Frontend
  frontend-angular:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend-dotnet
    environment:
      - NODE_ENV=production
    networks:
      - miniml-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ASP.NET 8 Backend
  backend-dotnet:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - ml-service-python
    environment:
      - ASPNETCORE_URLS=http://+:8000
    networks:
      - miniml-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Python ML Service
  ml-service-python:
    build:
      context: ./ml-service-python
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - PYTHONPATH=/app
    networks:
      - miniml-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./ml-service-python:/app
      - /app/__pycache__

networks:
  miniml-network:
    driver: bridge

volumes:
  app-data: